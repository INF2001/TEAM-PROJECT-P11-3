	// Method to edit work availability
1	public String editWorkAvailability(int staffUID, DateTime oldAvailabilityDateTime, DateTime newTimeSlot) {
    		// Assuming 'getUserAvailability' retrieves user's availability records
2    		Map<DateTime, Availability> availabilities = getUserAvailability(staffUID);
    		// Check if the user has existing availability records
3    		if (availabilities != null && !availabilities.isEmpty()) {
       			 // Decision point 1: Check if the selected availability DateTime exists for the user
4       			if (availabilities.containsKey(oldAvailabilityDateTime)) {
5            			Availability currentAvailability = availabilities.get(oldAvailabilityDateTime);
            			// Decision point 2: Check if the new time slot is different from the current one
6            			if (!currentAvailability.getTimeSlot().equals(newTimeSlot)) {
                			// Proceed with the update
7                			currentAvailability.setTimeSlot(newTimeSlot);
                			// Assume 'updateAvailability' updates the record in the database
8                			updateAvailability(staffUID, oldAvailabilityDateTime, newTimeSlot);
9                			return "Work availability updated successfully";
10            			} else {
                			// No changes made, exit function
11                			return "No changes to existing work availability";
            			}
12        		} else {
           			 // Invalid availability DateTime, return error
13           			 return "Invalid work availability record selected";
        		}
14    		} else {
       			// No existing records, return error
15        		return "No existing work availability records found";
    		}
16	}